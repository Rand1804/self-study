!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/wuwt/code/self-study/Linux/linux_kernel/kernel_driver/arm32_linux3.14/key_drv_fasync/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
APP_NAME	Makefile	/^APP_NAME = key_test$/;"	m
ARCH	Makefile	/^ARCH = arm$/;"	m
CC	Makefile	/^CC = $(CROSS_COMPILE)gcc$/;"	m
CHRDEV_NAME	key_drv.c	/^#define CHRDEV_NAME /;"	d	file:
CLS_NAME	key_drv.c	/^#define CLS_NAME /;"	d	file:
CROSS_COMPILE	Makefile	/^CROSS_COMPILE = \/home\/wuwt\/software\/gcc-linaro-4.9-2016.02-x86_64_arm-linux-gnueabihf\/bin\//;"	m
CUR_DIR	Makefile	/^CUR_DIR = $(shell pwd)$/;"	m
DEV_NAME	key_drv.c	/^#define DEV_NAME /;"	d	file:
GPX1CON	key_drv.c	/^#define GPX1CON /;"	d	file:
KERNEL_DIR	Makefile	/^KERNEL_DIR = \/home\/wuwt\/code\/linux-3.14$/;"	m
MODULE_NAME	Makefile	/^MODULE_NAME = key_drv$/;"	m
ROOTFS_DIR	Makefile	/^ROOTFS_DIR = \/opt\/4412\/rootfs$/;"	m
all	Makefile	/^all:$/;"	t
clean	Makefile	/^clean:$/;"	t
cls	key_drv.c	/^    struct class *cls;$/;"	m	struct:key_desc	typeref:struct:class *	file:
code	key_drv.c	/^    int code;$/;"	m	struct:key_event	typeref:typename:int	file:
dev	key_drv.c	/^    struct device *dev;$/;"	m	struct:key_desc	typeref:struct:device *	file:
dev_major	key_drv.c	/^    unsigned int dev_major;$/;"	m	struct:key_desc	typeref:typename:unsigned int	file:
ev	key_drv.c	/^    struct key_event ev;$/;"	m	struct:key_desc	typeref:struct:key_event	file:
ev_press	key_drv.c	/^    atomic_t ev_press;$/;"	m	struct:key_desc	typeref:typename:atomic_t	file:
get_irqno_from_node	key_drv.c	/^int get_irqno_from_node(void) {$/;"	f	typeref:typename:int
install	Makefile	/^install:$/;"	t
irqno	key_drv.c	/^    int irqno;$/;"	m	struct:key_desc	typeref:typename:int	file:
key_desc	key_drv.c	/^struct key_desc {$/;"	s	file:
key_dev	key_drv.c	/^struct key_desc *key_dev;$/;"	v	typeref:struct:key_desc *
key_drv_exit	key_drv.c	/^static void __exit key_drv_exit(void) {$/;"	f	typeref:typename:void __exit	file:
key_drv_init	key_drv.c	/^static int __init key_drv_init(void) {$/;"	f	typeref:typename:int __init	file:
key_drv_open	key_drv.c	/^int key_drv_open(struct inode *inode, struct file *filp) {$/;"	f	typeref:typename:int
key_drv_poll	key_drv.c	/^unsigned int key_drv_poll(struct file *flip, struct poll_table_struct *pts) {$/;"	f	typeref:typename:unsigned int
key_drv_read	key_drv.c	/^ssize_t key_drv_read(struct file *filp, char __user *buf, size_t count, loff_t *fpos) {$/;"	f	typeref:typename:ssize_t
key_event	key_drv.c	/^struct key_event {$/;"	s	file:
key_fops	key_drv.c	/^const struct file_operations key_fops = {$/;"	v	typeref:typename:const struct file_operations
key_irq_handler	key_drv.c	/^irqreturn_t key_irq_handler(int irqno, void *dev_id) {$/;"	f	typeref:typename:irqreturn_t
r_wait	key_drv.c	/^    wait_queue_head_t r_wait;$/;"	m	struct:key_desc	typeref:typename:wait_queue_head_t	file:
reg_base	key_drv.c	/^    void __iomem *reg_base;$/;"	m	struct:key_desc	typeref:typename:void __iomem *	file:
value	key_drv.c	/^    int value;$/;"	m	struct:key_event	typeref:typename:int	file:
